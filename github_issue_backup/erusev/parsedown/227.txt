{
  "url": "https://api.github.com/repos/erusev/parsedown/issues/227",
  "labels_url": "https://api.github.com/repos/erusev/parsedown/issues/227/labels{/name}",
  "comments_url": "https://api.github.com/repos/erusev/parsedown/issues/227/comments",
  "events_url": "https://api.github.com/repos/erusev/parsedown/issues/227/events",
  "html_url": "https://github.com/erusev/parsedown/issues/227",
  "id": 44279701,
  "number": 227,
  "title": "Why is Parsedown removing all line breaks?",
  "user": {
    "login": "stonetwig",
    "id": 47466,
    "avatar_url": "https://avatars.githubusercontent.com/u/47466?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stonetwig",
    "html_url": "https://github.com/stonetwig",
    "followers_url": "https://api.github.com/users/stonetwig/followers",
    "following_url": "https://api.github.com/users/stonetwig/following{/other_user}",
    "gists_url": "https://api.github.com/users/stonetwig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stonetwig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stonetwig/subscriptions",
    "organizations_url": "https://api.github.com/users/stonetwig/orgs",
    "repos_url": "https://api.github.com/users/stonetwig/repos",
    "events_url": "https://api.github.com/users/stonetwig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stonetwig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "url": "https://api.github.com/repos/erusev/parsedown/labels/on%20hold",
      "name": "on hold",
      "color": "fad8c7"
    },
    {
      "url": "https://api.github.com/repos/erusev/parsedown/labels/suggestion",
      "name": "suggestion",
      "color": "bfd4f2"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": 6,
  "created_at": "2014-09-29T10:41:41Z",
  "updated_at": "2015-01-15T11:32:10Z",
  "closed_at": null,
  "body": "```\r\n# trim line breaks\r\n$markup = trim($markup, \"\\n\");\r\nreturn $markup;\r\n```\r\n\r\nIn my code, I need to break up the markup afterwards to do some operations on it and since all line breaks are removed this causes problem for me and I will have to convert the markdown line for line. \r\n\r\nWhy is all line breaks removed?\r\n\r\nMy guess is that in the future people may have the same issue since this is kind of unexpected behavior, an idea would be functionality to skip that last trim with a parameter or something :)",
  "closed_by": null
}
BODY STARTS FROM HERE
[
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/57162600",
    "html_url": "https://github.com/erusev/parsedown/issues/227#issuecomment-57162600",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/227",
    "id": 57162600,
    "user": {
      "login": "hkdobrev",
      "id": 506129,
      "avatar_url": "https://avatars.githubusercontent.com/u/506129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hkdobrev",
      "html_url": "https://github.com/hkdobrev",
      "followers_url": "https://api.github.com/users/hkdobrev/followers",
      "following_url": "https://api.github.com/users/hkdobrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/hkdobrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hkdobrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hkdobrev/subscriptions",
      "organizations_url": "https://api.github.com/users/hkdobrev/orgs",
      "repos_url": "https://api.github.com/users/hkdobrev/repos",
      "events_url": "https://api.github.com/users/hkdobrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hkdobrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-29T13:46:58Z",
    "updated_at": "2014-09-29T13:47:31Z",
    "body": "This is how Markdown works. If you want the lines to break into multiple lines you could set the `$parsedown->breaksEnabled(true)` option. This will tell Parsedown to work similar to how GitHub renders Markdown in the pull request/issue description and comments.\r\n\r\nSee the [Usage wiki](https://github.com/erusev/parsedown/wiki/Usage) for more."
  },
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/57162989",
    "html_url": "https://github.com/erusev/parsedown/issues/227#issuecomment-57162989",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/227",
    "id": 57162989,
    "user": {
      "login": "hkdobrev",
      "id": 506129,
      "avatar_url": "https://avatars.githubusercontent.com/u/506129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hkdobrev",
      "html_url": "https://github.com/hkdobrev",
      "followers_url": "https://api.github.com/users/hkdobrev/followers",
      "following_url": "https://api.github.com/users/hkdobrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/hkdobrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hkdobrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hkdobrev/subscriptions",
      "organizations_url": "https://api.github.com/users/hkdobrev/orgs",
      "repos_url": "https://api.github.com/users/hkdobrev/repos",
      "events_url": "https://api.github.com/users/hkdobrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hkdobrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-29T13:49:49Z",
    "updated_at": "2014-09-29T13:49:49Z",
    "body": "Here is the relevant spec exceprt: http://daringfireball.net/projects/markdown/syntax#p\r\n\r\n> The implication of the “one or more consecutive lines of text” rule is that Markdown supports “hard-wrapped” text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type’s “Convert Line Breaks” option) which translate every line break character in a paragraph into a `<br />` tag.\r\n> \r\n> When you do want to insert a `<br />` break tag using Markdown, you end a line with two or more spaces, then type return.\r\n> \r\n> Yes, this takes a tad more effort to create a `<br />`, but a simplistic “every line break is a `<br />`” rule wouldn’t work for Markdown. Markdown’s email-style blockquoting and multi-paragraph list items work best — and look better — when you format them with hard breaks."
  },
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/57163868",
    "html_url": "https://github.com/erusev/parsedown/issues/227#issuecomment-57163868",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/227",
    "id": 57163868,
    "user": {
      "login": "stonetwig",
      "id": 47466,
      "avatar_url": "https://avatars.githubusercontent.com/u/47466?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonetwig",
      "html_url": "https://github.com/stonetwig",
      "followers_url": "https://api.github.com/users/stonetwig/followers",
      "following_url": "https://api.github.com/users/stonetwig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonetwig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonetwig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonetwig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonetwig/orgs",
      "repos_url": "https://api.github.com/users/stonetwig/repos",
      "events_url": "https://api.github.com/users/stonetwig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonetwig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-29T13:55:54Z",
    "updated_at": "2014-09-29T13:57:01Z",
    "body": "Yeah I understand and thanks for the reply. However, I tried to just extend the Markdown class with my own class to just redo that text-method to do my operations before the newlines is removed. But the ```lines```method is private so I had to go with the line-by-line approach anyway. It doesn't matter so much to me, as this will happen fairly rarely but it would be great if it was easier to extend using the ```protected```visibility instead.\r\n\r\nAnyway, thanks again :)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/57215996",
    "html_url": "https://github.com/erusev/parsedown/issues/227#issuecomment-57215996",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/227",
    "id": 57215996,
    "user": {
      "login": "hkdobrev",
      "id": 506129,
      "avatar_url": "https://avatars.githubusercontent.com/u/506129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hkdobrev",
      "html_url": "https://github.com/hkdobrev",
      "followers_url": "https://api.github.com/users/hkdobrev/followers",
      "following_url": "https://api.github.com/users/hkdobrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/hkdobrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hkdobrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hkdobrev/subscriptions",
      "organizations_url": "https://api.github.com/users/hkdobrev/orgs",
      "repos_url": "https://api.github.com/users/hkdobrev/repos",
      "events_url": "https://api.github.com/users/hkdobrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hkdobrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-29T19:36:04Z",
    "updated_at": "2014-09-29T19:36:04Z",
    "body": "Reading your comments again I don't think I've got what you meant. Why would you need the line breaks surrounding the whole Markdown source?\r\n\r\nAnd about the `private` vs. `protected` thing I'm with you. I think at least the `lines()` method to be made extensible via the `protected` access level."
  },
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/57236101",
    "html_url": "https://github.com/erusev/parsedown/issues/227#issuecomment-57236101",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/227",
    "id": 57236101,
    "user": {
      "login": "stonetwig",
      "id": 47466,
      "avatar_url": "https://avatars.githubusercontent.com/u/47466?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonetwig",
      "html_url": "https://github.com/stonetwig",
      "followers_url": "https://api.github.com/users/stonetwig/followers",
      "following_url": "https://api.github.com/users/stonetwig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonetwig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonetwig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonetwig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonetwig/orgs",
      "repos_url": "https://api.github.com/users/stonetwig/repos",
      "events_url": "https://api.github.com/users/stonetwig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonetwig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-29T21:50:24Z",
    "updated_at": "2014-09-29T21:51:24Z",
    "body": "Because when the markdown is converted to html, I want to be able to add attributes and classes to the html to be able to style the html that comes out. Since PHP DOMDocument is not very good for this (it adds a lot of extra garbage upon save) and the needs were very specific and small, I used regular expressions instead.\r\n\r\nWith regular expressions, I found it much easier to just go through the document line by line and append the attributes I needed. So basically I would send in a bunch of markdown with my extra special arguments like ```#This is a header {.with-a-class}``` and get a easier-to-style document out. Maybe this could be used in the ParsedownExtra repo since it's basically an extension of the regular Parsedown, with some refactoring I could open a pull request if this sounds interesting."
  },
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/70073210",
    "html_url": "https://github.com/erusev/parsedown/issues/227#issuecomment-70073210",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/227",
    "id": 70073210,
    "user": {
      "login": "erusev",
      "id": 184170,
      "avatar_url": "https://avatars.githubusercontent.com/u/184170?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erusev",
      "html_url": "https://github.com/erusev",
      "followers_url": "https://api.github.com/users/erusev/followers",
      "following_url": "https://api.github.com/users/erusev/following{/other_user}",
      "gists_url": "https://api.github.com/users/erusev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erusev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erusev/subscriptions",
      "organizations_url": "https://api.github.com/users/erusev/orgs",
      "repos_url": "https://api.github.com/users/erusev/repos",
      "events_url": "https://api.github.com/users/erusev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erusev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T11:31:47Z",
    "updated_at": "2015-01-15T11:32:10Z",
    "body": "@stonetwig \r\n\r\nI'm not sure I understand.\r\n\r\n> Because when the markdown is converted to html, I want to be able to add attributes and classes to the html to be able to style the html that comes out.\r\n\r\nHow would keeping the new line characters around the output help you with that?"
  }
]
