{
  "url": "https://api.github.com/repos/erusev/parsedown/issues/188",
  "labels_url": "https://api.github.com/repos/erusev/parsedown/issues/188/labels{/name}",
  "comments_url": "https://api.github.com/repos/erusev/parsedown/issues/188/comments",
  "events_url": "https://api.github.com/repos/erusev/parsedown/issues/188/events",
  "html_url": "https://github.com/erusev/parsedown/issues/188",
  "id": 35946113,
  "number": 188,
  "title": "Disable specific HTML Tag and return the HTML escape.",
  "user": {
    "login": "afunworm",
    "id": 5475479,
    "avatar_url": "https://avatars.githubusercontent.com/u/5475479?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/afunworm",
    "html_url": "https://github.com/afunworm",
    "followers_url": "https://api.github.com/users/afunworm/followers",
    "following_url": "https://api.github.com/users/afunworm/following{/other_user}",
    "gists_url": "https://api.github.com/users/afunworm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/afunworm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/afunworm/subscriptions",
    "organizations_url": "https://api.github.com/users/afunworm/orgs",
    "repos_url": "https://api.github.com/users/afunworm/repos",
    "events_url": "https://api.github.com/users/afunworm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/afunworm/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": 2,
  "created_at": "2014-06-18T00:54:05Z",
  "updated_at": "2014-06-18T09:47:56Z",
  "closed_at": "2014-06-18T01:04:26Z",
  "body": "I am writing a piece of software that allow people to use MarkDown to create part of the page. The problem is ParseDown allows <script> tags and that's obviously exploitable. Is there anyway to filter <script> particularly or any other tags generally?",
  "closed_by": {
    "login": "afunworm",
    "id": 5475479,
    "avatar_url": "https://avatars.githubusercontent.com/u/5475479?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/afunworm",
    "html_url": "https://github.com/afunworm",
    "followers_url": "https://api.github.com/users/afunworm/followers",
    "following_url": "https://api.github.com/users/afunworm/following{/other_user}",
    "gists_url": "https://api.github.com/users/afunworm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/afunworm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/afunworm/subscriptions",
    "organizations_url": "https://api.github.com/users/afunworm/orgs",
    "repos_url": "https://api.github.com/users/afunworm/repos",
    "events_url": "https://api.github.com/users/afunworm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/afunworm/received_events",
    "type": "User",
    "site_admin": false
  }
}
BODY STARTS FROM HERE
[
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/46393512",
    "html_url": "https://github.com/erusev/parsedown/issues/188#issuecomment-46393512",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/188",
    "id": 46393512,
    "user": {
      "login": "kminchev",
      "id": 6413068,
      "avatar_url": "https://avatars.githubusercontent.com/u/6413068?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kminchev",
      "html_url": "https://github.com/kminchev",
      "followers_url": "https://api.github.com/users/kminchev/followers",
      "following_url": "https://api.github.com/users/kminchev/following{/other_user}",
      "gists_url": "https://api.github.com/users/kminchev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kminchev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kminchev/subscriptions",
      "organizations_url": "https://api.github.com/users/kminchev/orgs",
      "repos_url": "https://api.github.com/users/kminchev/repos",
      "events_url": "https://api.github.com/users/kminchev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kminchev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T03:54:22Z",
    "updated_at": "2014-06-18T03:54:22Z",
    "body": "How are you going to stop them from using plain HTML?"
  },
  {
    "url": "https://api.github.com/repos/erusev/parsedown/issues/comments/46415659",
    "html_url": "https://github.com/erusev/parsedown/issues/188#issuecomment-46415659",
    "issue_url": "https://api.github.com/repos/erusev/parsedown/issues/188",
    "id": 46415659,
    "user": {
      "login": "hkdobrev",
      "id": 506129,
      "avatar_url": "https://avatars.githubusercontent.com/u/506129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hkdobrev",
      "html_url": "https://github.com/hkdobrev",
      "followers_url": "https://api.github.com/users/hkdobrev/followers",
      "following_url": "https://api.github.com/users/hkdobrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/hkdobrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hkdobrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hkdobrev/subscriptions",
      "organizations_url": "https://api.github.com/users/hkdobrev/orgs",
      "repos_url": "https://api.github.com/users/hkdobrev/repos",
      "events_url": "https://api.github.com/users/hkdobrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hkdobrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T09:47:56Z",
    "updated_at": "2014-06-18T09:47:56Z",
    "body": "See https://github.com/github/markup.\r\n\r\nSanitizing is a separate functionality which IMHO should not be a part of the Markdown parser, because Markdown allows HTML. You could sanitize the input to remove HTML before parsing it. You could also perform some sanitization after the parsing."
  }
]
